- hosts: openshift
  tasks:
  - name: check if user has cluster-admin role
    command: >
      oc get clusterrolebindings -o
      jsonpath='{.items[?(@.roleRef.name == "cluster-admin")].subjects[?(@.kind == "User")].name}'
    changed_when: false
    check_mode: false
    register: cluster_admins
  - name: add cluster-admin role to user
    command: >
      oadm policy add-cluster-role-to-user
      cluster-admin {{ openshift_username }}
    when: openshift_username not in cluster_admins.stdout.split()
  - name: check if node is schedulable
    command: >
      oc get node/{{ openshift_hostname }}
      --template '{{ '{{or .spec.unschedulable ""}}' }}'
    changed_when: false
    check_mode: false
    register: node_schedulable
  - name: set node as schedulable
    command: oadm manage-node {{ openshift_hostname }} --schedulable
    when: node_schedulable.stdout
  - name: check if registry is already installed
    command: oadm registry --dry-run
    changed_when: false
    failed_when: false
    check_mode: false
    register: registry_installed
  - name: install registry
    command: oadm registry
    when: registry_installed is failed
  - name: check if router is already installed
    command: oadm router --dry-run
    register: router_installed
    changed_when: false
    failed_when: false
    check_mode: false
  - name: install router
    command: oadm router
    when: router_installed is failed
