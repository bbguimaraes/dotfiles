- hosts: desktops
  tags: base
  vars:
    home: '{{ ansible_env.HOME }}'
    src_dir: '{{ home }}/src'
    tmp_dir: "{{ ansible_env.TMPDIR|default('tmp') }}"
  tasks:
  - name: clone repositories
    git:
      repo: https://git.bbguimaraes.com/{{ item.0 }}.git
      dest: "{{ src_dir }}/{{ item.0 }}"
      version: "{{ item.1 }}"
      update: no
    loop:
    - ["impero", "master"]
    - ["subs", "lbry"]
  - name: build programs (autotools)
    include_tasks: autotools.yaml
    vars:
      target: impero
      target_bin: impero
      dir: "{{ src_dir }}/impero"
  - name: build programs (autotools)
    make:
      chdir: "{{ src_dir }}/{{ item }}"
    loop:
    - subs
  - name: create home directories
    file:
      state: directory
      path: '{{ home }}/{{ item }}'
    loop:
    - .config/gdb
    - .config/git
    - .config/i3
    - .config/i3status
    - .config/impero
    - .config/khal
    - .config/offlineimap
    - .config/ripgrep
    - .config/tig
    - .config/vdirsyncer
    - .local/bin
    - .local/share/subs
    - .local/share/systemd/user
    - .local/share/tig
    - .mutt
    - .vim/colors
    - .vim/spell
  - name: setup dotfile symlinks
    file:
      state: link
      src: '{{ src_dir }}/dotfiles/{{ item.0 }}'
      dest: '{{ home }}/{{ item.1 }}'
    loop:
    - ['gdb/init',             '.config/gdb/gdbinit']
    - ['git/tigrc',            '.config/tig/config']
    - ['i3/config',            '.config/i3/config']
    - ['i3/status',            '.config/i3status/config']
    - ['khal/khal.conf',       '.config/khal/config']
    - ['khal/vdirsyncer.conf', '.config/vdirsyncer/config']
    - ['khal/vdirsyncer.service',
       '.local/share/systemd/user/vdirsyncer.service']
    - ['khal/vdirsyncer.sh',   '.config/vdirsyncer/run.sh']
    - ['mutt/msmtprc',         '.msmtprc']
    - ['mutt/muttrc',          '.mutt/muttrc']
    - ['mutt/mailcap',         '.mutt/mailcap']
    - ['offlineimap/offlineimap@.service',
       '.local/share/systemd/user/offlineimap@.service']
    - ['redshift.conf',        '.config/redshift.conf']
    - ['ripgrep',              '.config/ripgrep/config']
    - ['user-dirs.dirs',       '.config/user-dirs.dirs']
    - ['vim/preto.vim',        '.vim/colors/preto.vim']
    - ['xorg/xinitrc',         '.xinitrc']
    - ['xorg/Xresources',      '.Xresources']
  - name: setup other symlinks
    file:
      state: link
      src: '{{ item.0 }}'
      dest: '{{ home }}/{{ item.1 }}'
    loop:
    - ['{{ home }}/n/archive/impero.txt', '.config/impero/commands.txt']
    - ['{{ home }}/n/archive/mutt.aliases', '.mutt/aliases']
    - ['{{ home }}/n/archive/pass', '.password-store']
    - ['{{ home }}/n/archive/vim.spl', '.vim/spell/en.utf-8.add.spl']
    - ['{{ home }}/n/subs.sqlite', '.local/share/subs/db']
    - ['{{ home }}/src/impero/impero', '.local/bin/impero']
    - ['{{ home }}/src/subs/subs', '.local/bin/subs']
  - name: setup CA symlinks
    file:
      state: link
      src: /etc/ssl/certs/ca-certificates.crt
      dest: '{{ home }}/{{ item }}'
    loop:
    - .mutt/tls_trust_file
    - .config/offlineimap/tls_trust_file
  - name: check if pass has been initialized
    stat:
      path: "{{ home }}/.password-store/.gpg-id"
    register: rc
  - name: initialize pass
    command:
      argv:
      - pass
      - init
      - 3612A05DF0A1CB2A4C7A2E1341393B23D2144C3B
    when: not rc.stat.exists
  - name: check if vdirsyncer has been initialized
    stat:
      path: "{{ home }}/.local/share/vdirsyncer"
    failed_when: false
    register: rc
  - name: create vdirsyncer directories
    file:
      state: directory
      path: "{{ home }}/.local/share/vdirsyncer/{{ item }}"
    loop:
    - nextcloud/cal
    - nextcloud/contact_birthdays
  - name: initialize vdirsyncer
    shell: |
      pass show bbguimaraes.com/nextcloud/cal \
        | vdirsyncer discover nextcloud
    when: not rc.stat.exists
  - name: enable and start services
    systemd:
      enabled: true
      state: started
      name: '{{ item }}'
      scope: user
      daemon_reload: true
    loop:
    - redshift
    - vdirsyncer
  - name: ensure files have been created/imported
    stat: 'path={{ home }}/{{ item }}'
    register: st
    failed_when: not st.stat.exists
    loop:
    - .config/Nextcloud/nextcloud.cfg
    - .gnupg/private-keys-v1.d/2E2E172E019FB7185972C20A9EC30C06B7645832.key
    - .gnupg/private-keys-v1.d/80B69EFC5B439D3F744F52E3FF80117C439C7BB2.key
    - .local/share/vdirsyncer
    - .password-store
    - .ssh/id_rsa
    - .ssh/id_rsa.pub
    - n
- hosts: desktops
  tags: urxvt
  vars:
    home: '{{ ansible_env.HOME }}'
  tasks:
  - name: clone urxvt resize-font plugin
    git:
      repo: https://github.com/simmel/urxvt-resize-font.git
      dest: '{{ home }}/.urxvt/ext/urxvt-resize-font'
  - name: add urxvt resize-font symlink
    file:
      state: link
      src: '{{ home }}/.urxvt/ext/urxvt-resize-font/resize-font'
      dest: '{{ home }}/.urxvt/ext/resize-font'
- hosts: desktops
  tags: weechat
  vars:
    conf_dir: '{{ ansible_env.HOME }}/.config/weechat'
    data_dir: '{{ ansible_env.HOME }}/.local/share/weechat'
    home: "{{ ansible_env.HOME }}"
  tasks:
  - block:
    - name: install weechat-edit-git
      import_tasks: aur.yaml
      vars: {"pkg": "weechat-edit-git"}
  - name: create weechat directories
    file:
      state: directory
      path: '{{ data_dir }}/{{ item }}'
    with_items:
    - lua
    - lua/autoload
    - python
    - python/autoload
  - name: create symlinks
    file:
      state: link
      src: '{{ item.0 }}'
      dest: '{{ data_dir }}/{{ item.1 }}'
    loop:
    - - /usr/share/weechat/python/weechat-matrix.py
      - python/autoload/weechat-matrix.py
    - - /usr/share/weechat/python/edit.py
      - python/autoload/edit.py
  - name: set weechat variables
    ini_file:
      path: '{{ conf_dir }}/{{ item.file }}'
      section: '{{ item.section }}'
      option: '{{ item.opt }}'
      value: '{{ item.val }}'
    loop:
    - opt: beep.conditions
      val: ${tg_displayed}
      file: trigger.conf
      section: trigger
    - file: weechat.conf
      section: color
      opt: separator
      val: white
    - file: weechat.conf
      section: color
      opt: status_number
      val: white
    - file: weechat.conf
      section: bar
      opt: status.color_bg
      val: black
    - file: weechat.conf
      section: bar
      opt: title.color_bg
      val: black
    - file: buflist.conf
      section: format
      opt: buffer_current
      val: '${format_number}${indent}${color:*white,}${name}'
- hosts: desktops:&arch
  name: aur pkgs
  tags: aur
  tasks:
  - import_tasks: aur.yaml
    vars: {"pkg": "duc", "keys": ["CACDA4B54202FA2F"]}
  - import_tasks: aur.yaml
    vars: {"pkg": "mit-scheme", "keys": ["C9E40BAAFD0CB132"]}
  - import_tasks: aur.yaml
    vars: {"pkg": "opencl-1.2-man-doc"}
  - import_tasks: aur.yaml
    vars: {"pkg": "pam-gnupg"}
  - import_tasks: aur.yaml
    vars: {"pkg": "renderdoc", "keys": ["AC612C3120C34695"]}
  - import_tasks: aur.yaml
    vars: {"pkg": "stellarium", "keys": ["9380E47C0374E169"]}
  - import_tasks: aur.yaml
    vars: {"pkg": "vim-diffchar"}
  - import_tasks: aur.yaml
    vars: {"pkg": "vim-dispatch", "keys": ["E09E474A404A3A45"]}
