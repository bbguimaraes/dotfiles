- hosts: all
  tags: base_sys_pkgs
  tasks:
  - name: install base system packages
    package:
      state: present
      name: "{{ item }}"
    with_items:
    - grub
    - os-prober
- hosts: all
  tags: base_pkgs
  vars:
    pkgs:
    - >- # dev
      ansible busybox clang cloc cmake colordiff ctags dash distcc emacs gdb go
      graphviz hub ipython musl podman python-pip rust tidy tig vim-ctrlp
      vim-fugitive vim-gitgutter arm-none-eabi-gcc base-devel ccache cjson dash
      devtools doxygen encfs libc++ llvm mit-scheme mypy opengl-man-pages pocl
      qemu renderdoc valgrind vim-tagbar
    - >- # xorg
      mesa xorg xorg-xinit
    - >- # graphical
      calibre chromium dmenu feh gimp i3lock i3status qt5ct redshift
      rxvt-unicode simplescreenrecorder scrot xclip xdotool blender breeze
      celluloid dunst firefox i3-wm imagemagick inkscape kdenlive
      libreoffice-fresh mednafen picom stellarium ttf-dejavu
    - >- #audio
      audacity alsa-utils hydrogen mpv musescore pavucontrol pulseaudio
      pulseaudio-alsa pulseaudio-bluetooth
    - >- # tools
      acpi discount ffmpeg fish gnuplot inotify-tools ltrace lsof moreutils
      msmtp mutt nextcloud-client offlineimap p7zip pass perf poppler pv
      python-matplotlib ripgrep unrar strace units vdirsyncer weechat
      android-tools bc bind-tools bluez bluez-utils jq khal lynx openbsd-netcat
      pacman-contrib pigz pixz rlwrap sshfs unzip weechat-matrix words
      youtube-dl
    - >- # aurutils
      expac diffstat pacutils parallel wget
    - >- # wine
      lib32-mesa mingw-w64 wine wine-mono
    - >- # nngn
      boost clinfo emscripten glew glfw-x11 glm intel-compute-runtime
      opencl-headers ocl-icd qt5-charts vulkan-intel vulkan-devel
    - >- # nngn tests
      freeglut glu
  tasks:
  - name: enable multilib
    blockinfile:
      state: present
      path: /etc/pacman.conf
      marker: '# {mark} ANSIBLE MANAGED BLOCK MULTILIB'
      block: |
        [multilib]
        Include = /etc/pacman.d/mirrorlist
  - name: install base packages
    package:
      name: '{{ (pkgs|join(" ")).split(" ") }}'
- hosts: all
  tasks:
  - name: enable/start services
    service:
      enabled: true
      state: started
      name: bluetooth
  - name: disable perf paranoid mode for Vulkan
    sysctl:
      name: dev.i915.perf_stream_paranoid
      value: '0'
      state: present
- hosts: all
  tags: aurutils
  vars:
    user: bbguimaraes
    aurutils_repo: /var/lib/pacman/aurutils
    aurutils_gpg_key: DBE7D3DD8C81D58D0A13D0E76BC26A17B9B7018A
  tasks:
  - block:
    - name: create local repository directory
      file:
        state: directory
        path: '{{ aurutils_repo }}'
        owner: '{{ user }}'
        group: users
    - name: unprivileged operations
      become: yes
      become_user: '{{ user }}'
      become_method: su
      block:
      - name: check if aurutils gpg key is imported
        command: gpg2 --list-keys '{{ aurutils_gpg_key }}'
        register: rc
        ignore_errors: true
        changed_when: false
      - name: import aurutils gpg key
        command: gpg2 --recv-keys '{{ aurutils_gpg_key }}'
        when: rc is failed
      - name: check if already installed
        command: pacman -Qqi aurutils
        register: aurutils_installed
        ignore_errors: true
        changed_when: false
      - name: download snapshot
        get_url:
          url: https://aur.archlinux.org/cgit/aur.git/snapshot/aurutils.tar.gz
          dest: /tmp/aurutils.tar.gz
        when: aurutils_installed is failed
      - name: extract files
        unarchive:
          src: /tmp/aurutils.tar.gz
          dest: /tmp
        when: aurutils_installed is failed
      - name: makepkg
        command:
          argv: makepkg
          chdir: /tmp/aurutils
          creates: /tmp/aurutils/aurutils-*.pkg.tar.xz
        when: aurutils_installed is failed
      - name: create local repository
        command:
          argv:
          - repo-add
          - '{{ aurutils_repo }}/aurutils.db.tar'
          creates: '{{ aurutils_repo }}/aurutils.db.tar'
    - name: install package
      command: pacman --noconfirm -U '{{ item }}'
      with_fileglob: /tmp/aurutils/aurutils-*.pkg.tar.xz
      when: aurutils_installed is failed
    - name: add local repository to pacman.conf
      blockinfile:
        state: present
        path: /etc/pacman.conf
        marker: '# {mark} ANSIBLE MANAGED BLOCK AURUTILS'
        block: |
          [aurutils]
          SigLevel = Optional TrustAll
          Server = file://{{ aurutils_repo }}
    - name: update pacman cache
      command: pacman -Sy
- hosts: all
  tags: misc
  tasks:
  - name: disable pulseaudio esound module
    replace:
      path: /etc/pulse/default.pa
      regexp: '^(load-module module-esound-protocol-unix)$'
      replace: '#\1'
