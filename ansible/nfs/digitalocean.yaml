- hosts: nfs
  tasks:
  - name: install packages
    package:
      state: present
      name: nfs-utils
  - name: format the filesystem
    when: '{{ nfs_format_disk|default(false) }}'
    filesystem:
      dev: '{{ nfs_dev }}'
      fstype: ext4
  - name: mount the filesystem
    mount:
      state: mounted
      src: '{{ nfs_dev }}'
      name: '{{ nfs_dir }}'
      fstype: ext4
      # DO's documentation recommends `discard`
      opts: discard,defaults
  - name: create root directory
    file:
      state: directory
      path: '{{ nfs_dir }}'
      owner: root
      group: root
      mode: 0755
  - name: disable old versions
    lineinfile:
      dest: /etc/sysconfig/nfs
      line: "RPCNFSDARGS='-N 2 -N 3'"
    notify:
    - restart nfs
  - name: create exports directories
    file:
      path: '{{ nfs_dir }}/{{ item["path"] }}'
      state: directory
      owner: '{{ item["owner"]|default("0") }}'
      group: '{{ item["group"]|default("0") }}'
      mode: '{{ item["mode"]|default("0755") }}'
    with_items: '{{ nfs_exports }}'
  - name: collect allowed hosts
    set_fact:
      nfs_root_allowed_hosts: >
        {{ nfs_root_allowed_hosts
          |default(nfs_allowed_hosts)
          |union(item.allowed_hosts|default([])) }}
    with_items: '{{ nfs_exports }}'
  - name: create exports file
    template:
      src: exports.j2
      dest: /etc/exports
      owner: root
      group: root
      mode: 0644
    notify: exportfs
  - name: enable and start the nfs services
    service:
      state: started
      enabled: yes
      name: '{{ item }}'
    with_items:
    - rpcbind
    - nfs-lock
    - nfs-server
  handlers:
  - name: restart nfs
    service:
      state: restarted
      name: '{{ item }}'
    with_items:
    - nfs-config
    - nfs
  - name: exportfs
    command: exportfs -ar
